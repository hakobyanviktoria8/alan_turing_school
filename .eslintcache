[{"C:\\Users\\Viktorya\\Desktop\\alan_turing_school\\src\\index.js":"1","C:\\Users\\Viktorya\\Desktop\\alan_turing_school\\src\\App.js":"2","C:\\Users\\Viktorya\\Desktop\\alan_turing_school\\src\\SignUp\\SignUp.js":"3","C:\\Users\\Viktorya\\Desktop\\alan_turing_school\\src\\SignUp\\ModalComponent.js":"4","C:\\Users\\Viktorya\\Desktop\\alan_turing_school\\src\\Sign_Up_Valid\\Sign_UP_Valid.js":"5","C:\\Users\\Viktorya\\Desktop\\alan_turing_school\\src\\SignUp_HOOK\\SignUp_HOOK.js":"6"},{"size":225,"mtime":1613083587876,"results":"7","hashOfConfig":"8"},{"size":747,"mtime":1613729497096,"results":"9","hashOfConfig":"8"},{"size":7173,"mtime":1613507292316,"results":"10","hashOfConfig":"8"},{"size":1418,"mtime":1613333292658,"results":"11","hashOfConfig":"8"},{"size":8437,"mtime":1613729497153,"results":"12","hashOfConfig":"8"},{"size":7433,"mtime":1613682574129,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"d203xp",{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"30"},"C:\\Users\\Viktorya\\Desktop\\alan_turing_school\\src\\index.js",[],["31","32"],"C:\\Users\\Viktorya\\Desktop\\alan_turing_school\\src\\App.js",["33","34"],"C:\\Users\\Viktorya\\Desktop\\alan_turing_school\\src\\SignUp\\SignUp.js",["35","36"],"import React, {useState} from \"react\";\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport \"./SignUp.css\";\r\nimport logo from \"./../img/logo.png\";\r\nimport  {Link} from \"react-router-dom\";\r\nimport ModalComponent from \"./ModalComponent\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from \"axios\";\r\n\r\n\r\nexport function SignUp(props){\r\n    const [email, setEmail] = useState(\"\");\r\n    const [emailValid, setEmailValid] = useState(false);\r\n    const [password, setPassword] = useState(\"\");\r\n    const [passwordValid, setPasswordValid] = useState(false);\r\n    const [passwordErrorMassage, setPasswordErrorMassage] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n    const [checkedAgree, setCheckedAgree] = useState(false);\r\n    const [successMessage, setSuccessMessage] = useState(null);\r\n    const [error, setError] = useState(null);\r\n\r\n    const handleChangeEmail = (event) => {\r\n        const reg = /^(((?=.*[a-z])(?=.*[A-Z]))|((?=.*[a-z])(?=.*[0-9]))|((?=.*[A-Z])(?=.*[0-9])))(?=.{6,})/;\r\n        if (reg.test(event.target.value)) {\r\n            setEmailValid(false)\r\n        } else {\r\n            setEmailValid(true)\r\n        }\r\n        setEmail(event.target.value);\r\n\r\n    };\r\n    const handleChangePassword = (event) => {\r\n        if (/(?=.{8,})/.test(event.target.value)) {\r\n            setPasswordValid(false);\r\n            setPasswordErrorMassage(\"Length 8 character\")\r\n\r\n        } else if (/(?=.*[a-z])/.test(event.target.value)) {\r\n            setPasswordValid(false);\r\n            setPasswordErrorMassage(\"Password contain a-z charakters\")\r\n        }  else {\r\n            setPasswordValid(true)\r\n        }\r\n        setPassword(event.target.value);\r\n    };\r\n    const handleChangeConfirmPassword = (event) => {\r\n        //password === confirmPassword\r\n        setConfirmPassword(event.target.value);\r\n    };\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if(password === confirmPassword) {\r\n            console.log(email + \" \" +password);\r\n            sendDetailsToServer()\r\n        } else {\r\n            alert('Passwords do not match');\r\n        }\r\n    };\r\n\r\n    const sendDetailsToServer = () => {\r\n        if(email.length && password.length) {\r\n            setError(null);\r\n            const payload={\r\n                \"email\": email,\r\n                \"password\": password,\r\n            };\r\n            axios.post('User/PostUserItem', payload)\r\n                .then(function (response) {\r\n                    if(response.status === 200){\r\n                        setSuccessMessage( 'Registration successful. Redirecting to home page..');\r\n                        // redirectToHome();\r\n                        setError(null)\r\n                    } else{\r\n                        alert(\"Some error ocurred\");\r\n                    }\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                });\r\n        } else {\r\n            alert('Please enter valid username and password');\r\n        }\r\n    };\r\n\r\n    return(\r\n        <Container fluid className={\"SignUP\"}>\r\n            <Row>\r\n                <Col lg={\"7\"} className={\"border p-0\"}>\r\n                    <div  className={\"bgSignUp\"}>\r\n                        <div className={\"logoWrap\"}>\r\n                            <img src={logo} alt=\"\"/>\r\n                        </div>\r\n                        <div className={\"headerLeftText\"}>\r\n                            <h1>Lorem Ipsum </h1>\r\n                            <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit.\r\n                                Consequuntur ex officia officiis possimus ut. Soluta.\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n                <Col lg={\"5\"} className={\"border\"}>\r\n                    <div className={\"headerRightText\"}>\r\n                        <div>\r\n                            <h2>Sign Up</h2>\r\n                        </div>\r\n                        <div>\r\n                            <form noValidate autoComplete=\"off\" method={\"post\"}>\r\n                                <TextField\r\n                                    id=\"standard-search\"\r\n                                    label= {<span><EmailIcon/> Email</span>}\r\n                                    type=\"email\"\r\n                                    value={email}\r\n                                    onChange={handleChangeEmail}\r\n                                    className=\"input\"\r\n                                    error={emailValid}\r\n                                    helperText={emailValid? \"Error\" :\"\"}\r\n                                />\r\n                                <TextField\r\n                                    id=\"standard-password-input\"\r\n                                    label={<span><LockIcon/> Password</span>}\r\n                                    type=\"password\"\r\n                                    autoComplete=\"current-password\"\r\n                                    value={password}\r\n                                    onChange={handleChangePassword}\r\n                                    className=\"input\"\r\n                                    error={passwordValid}\r\n                                    helperText={passwordErrorMassage}\r\n                                />\r\n                                <TextField\r\n                                    id=\"standard-password-input\"\r\n                                    label={<span><LockIcon/> Confirm Password</span>}\r\n                                    type=\"password\"\r\n                                    autoComplete=\"current-password\"\r\n                                    value={confirmPassword}\r\n                                    onChange={handleChangeConfirmPassword}\r\n                                    className=\"input\"\r\n                                />\r\n                                <label className={\"d-flex agreeToRules\"}>\r\n                                    <input type=\"checkbox\" checked={checkedAgree} onChange={()=>setCheckedAgree(!checkedAgree)}/>\r\n                                    I accept the\r\n                                    <ModalComponent title={\"Terms of Use\"}/> &\r\n                                    <ModalComponent title={\"Privacy Policy\"}/>\r\n                                </label>\r\n                                <Button onClick={handleSubmit} className=\"btnSignUp\" color=\"primary\" type=\"submit\" variant=\"contained\"  disableElevation disabled={!checkedAgree}>\r\n                                    Sign Up\r\n                                </Button>\r\n                            </form>\r\n                        </div>\r\n                        <div>\r\n                            <p>Already have an account?\r\n                                <Link to=\"/SignIn\"> Sign In</Link>\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\n","C:\\Users\\Viktorya\\Desktop\\alan_turing_school\\src\\SignUp\\ModalComponent.js",[],"C:\\Users\\Viktorya\\Desktop\\alan_turing_school\\src\\Sign_Up_Valid\\Sign_UP_Valid.js",["37","38","39","40"],"import React, {useState} from \"react\";\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport \"./Sign_Up_Valid.css\";\r\nimport logo from \"./../img/logo.png\";\r\nimport  {Link} from \"react-router-dom\";\r\nimport ModalComponent from \"../SignUp/ModalComponent\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { sha256, sha224 } from 'js-sha256';\r\n\r\n\r\n\r\nexport function Sign_Up_Valid(props){\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [passwordCash, setPasswordCash] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n    const [checkedAgree, setCheckedAgree] = useState(false);\r\n\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n    const onSubmit = data => {\r\n        sendDetailsToServer()\r\n    };\r\n\r\n    const handleChangeEmail = (event) => {\r\n        setEmail(event.target.value.split(\"\").filter(x=>x===\" \"?\"\":x).join(\"\"));\r\n    };\r\n    const handleChangePassword = (event) => {\r\n        setPassword(event.target.value);\r\n        let hash = sha256.create().update(event.target.value.split(\"\").filter(x => x === \" \" ? \"\" : x).join(\"\")).hex();\r\n        setPasswordCash(hash);\r\n    };\r\n    const handleChangeConfirmPassword = (event) => {\r\n        setConfirmPassword(event.target.value.split(\"\").filter(x => x === \" \"? \"\" : x).join(\"\"));\r\n    };\r\n\r\n    const sendDetailsToServer = () => {\r\n        // setError(null);\r\n        const payload= {\r\n            \"email\": email,\r\n            \"password\": passwordCash,\r\n        };\r\n        // axios.post('User/PostUserItem', payload)\r\n        //     .then(function (response) {\r\n        //         if(response.statusText === \"OK\"){\r\n        //             setSuccessMessage( 'Registration successful. Redirecting to home page..');\r\n        //             // redirectToHome();\r\n        //             setError(null)\r\n        //         } else{\r\n        //             alert(\"Some error ocurred\");\r\n        //         }\r\n        //     })\r\n        //     .catch(function (error) {\r\n        //         console.log(error);\r\n        // });\r\n        console.log(payload)\r\n    };\r\n\r\n    return(\r\n        <Container fluid className={\"SignUP\"}>\r\n            <Row>\r\n                <Col lg={\"7\"} className={\"border p-0\"}>\r\n                    <div  className={\"bgSignUp\"}>\r\n                        <div className={\"logoWrap\"}>\r\n                            <img src={logo} alt=\"\"/>\r\n                        </div>\r\n                        <div className={\"headerLeftText\"}>\r\n                            <h1>Lorem Ipsum </h1>\r\n                            <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit.\r\n                                Consequuntur ex officia officiis possimus ut. Soluta.\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n                <Col lg={\"5\"} className={\"border\"}>\r\n                    <div className={\"headerRightText\"}>\r\n                        <div>\r\n                            <h2>Sign Up</h2>\r\n                        </div>\r\n                        <div>\r\n                            <form onSubmit={handleSubmit(onSubmit)} noValidate autoComplete=\"off\" method={\"post\"}>\r\n                                <input\r\n                                    ref = {register({\r\n                                        required: \"Email is required\",\r\n                                        minLength:{\r\n                                            value: 8,\r\n                                            message: \"Min length 8 character.\"\r\n                                        },\r\n                                        maxLength:{\r\n                                            value: 15,\r\n                                            message: \"Max length 15 character.\"\r\n                                        },\r\n                                        validate: (value) => {\r\n                                            return (\r\n                                                [/(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/].every(pattern => pattern.test(value)) ||\r\n                                                \"Invalid email.\"\r\n                                            )\r\n                                        }\r\n                                    })}\r\n                                    name={\"email\"}\r\n                                    className={\"input\"}\r\n                                    type=\"email\"\r\n                                    value={email}\r\n                                    onChange={handleChangeEmail}\r\n                                />\r\n                                {errors.email ?  <p>{errors.email.message}</p> : null}\r\n\r\n                                <input\r\n                                    ref = {register({\r\n                                        required: \"Password is required\",\r\n                                        minLength:{\r\n                                            value: 8,\r\n                                            message: \"Min length 8 character.\"\r\n                                        },\r\n                                        maxLength:{\r\n                                            value: 15,\r\n                                            message: \"Max length 15 character.\"\r\n                                        },\r\n                                        validate: (value) => {\r\n                                            return (\r\n                                                [/[a-z]/,/[A-Z]/,/[0-9]/].every(pattern => pattern.test(value)) ||\r\n                                                \"The password must contain uppercase, lowercase and number.\"\r\n                                            )\r\n                                        }\r\n                                    })}\r\n                                    name={\"password\"}\r\n                                    className={\"input\"}\r\n                                    type=\"password\"\r\n                                    value={password}\r\n                                    onChange={handleChangePassword}\r\n                                />\r\n                                {errors.password ? <p>{errors.password.message}</p> : null}\r\n\r\n                                <input ref = {register({\r\n                                    required: \"Confirm Password is required\",\r\n                                    validate: value => value === password ? null : \"Do not match passwords\"\r\n\r\n                                })}\r\n                                       name={\"confirmPassword\"}\r\n                                       className={\"input\"}\r\n                                       type=\"password\"\r\n                                       value={confirmPassword}\r\n                                       onChange={handleChangeConfirmPassword}\r\n                                />\r\n                                {errors.confirmPassword ? <p>{errors.confirmPassword.message}</p> : null}\r\n\r\n                                <label className={\"d-flex agreeToRules\"}>\r\n                                    <input ref = {register({required: true})} name={\"checked\"} type=\"checkbox\" checked={checkedAgree} onChange={()=>setCheckedAgree(!checkedAgree)}/>\r\n                                    I accept the\r\n                                    <ModalComponent title={\"Terms of Use\"}/> &\r\n                                    <ModalComponent title={\"Privacy Policy\"}/>\r\n                                </label>\r\n\r\n                                <input className={\"input\"} type=\"submit\" value=\"Sign Up\"/>\r\n\r\n                            </form>\r\n                        </div>\r\n                        <div>\r\n                            <p>Already have an account?\r\n                                <Link to=\"/SignIn\"> Sign In</Link>\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\n","C:\\Users\\Viktorya\\Desktop\\alan_turing_school\\src\\SignUp_HOOK\\SignUp_HOOK.js",["41","42","43","44","45","46","47","48"],"import React, {useState} from \"react\";\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport \"../SignUp/SignUp.css\";\r\nimport logo from \"./../img/logo.png\";\r\nimport  {Link} from \"react-router-dom\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useForm } from \"react-hook-form\";\r\n\r\n\r\n\r\nexport function SignUp_HOOK(props){\r\n    const [email, setEmail] = useState(\"\");\r\n    const [emailValid, setEmailValid] = useState(false);\r\n    const [password, setPassword] = useState(\"\");\r\n    const [passwordValid, setPasswordValid] = useState(false);\r\n    const [passwordErrorMassage, setPasswordErrorMassage] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n    const [checkedAgree, setCheckedAgree] = useState(false);\r\n\r\n    const handleChangeEmail = (event) => {\r\n        setEmail(event.target.value);\r\n    };\r\n    const handleChangePassword = (event) => {\r\n        setPassword(event.target.value);\r\n    };\r\n    const handleChangeConfirmPassword = (event) => {\r\n        setConfirmPassword(event.target.value);\r\n    };\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n    const onSubmit = data => console.log(data);\r\n\r\n    // const handleSubmit = (event) => {\r\n    //     event.preventDefault();\r\n    //     if(password === confirmPassword) {\r\n    //         console.log(email + \" \" +password);\r\n    //         sendDetailsToServer()\r\n    //     } else {\r\n    //         alert('Passwords do not match');\r\n    //     }\r\n    // };\r\n    //\r\n    // const sendDetailsToServer = () => {\r\n    //     if(email.length && password.length) {\r\n    //         setError(null);\r\n    //         const payload={\r\n    //             \"email\": email,\r\n    //             \"password\": password,\r\n    //         };\r\n    //         axios.post('User/PostUserItem', payload)\r\n    //             .then(function (response) {\r\n    //                 if(response.status === 200){\r\n    //                     setSuccessMessage( 'Registration successful. Redirecting to home page..');\r\n    //                     // redirectToHome();\r\n    //                     setError(null)\r\n    //                 } else{\r\n    //                     alert(\"Some error ocurred\");\r\n    //                 }\r\n    //             })\r\n    //             .catch(function (error) {\r\n    //                 console.log(error);\r\n    //             });\r\n    //     } else {\r\n    //         alert('Please enter valid username and password');\r\n    //     }\r\n    // };\r\n\r\n    return(\r\n        <Container fluid className={\"SignUP\"}>\r\n            <Row>\r\n                <Col lg={\"7\"} className={\"border p-0\"}>\r\n                    <div  className={\"bgSignUp\"}>\r\n                        <div className={\"logoWrap\"}>\r\n                            <img src={logo} alt=\"\"/>\r\n                        </div>\r\n                        <div className={\"headerLeftText\"}>\r\n                            <h1>Lorem Ipsum </h1>\r\n                            <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit.\r\n                                Consequuntur ex officia officiis possimus ut. Soluta.\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n                <Col lg={\"5\"} className={\"border\"}>\r\n                    <div className={\"headerRightText\"}>\r\n                        <div>\r\n                            <h2>Sign Up</h2>\r\n                        </div>\r\n                        <div>\r\n                            <form onSubmit={handleSubmit(onSubmit)} noValidate autoComplete=\"off\" method={\"post\"}>\r\n                                <TextField\r\n                                    id=\"standard-search\"\r\n                                    label= {<span><EmailIcon/> Email</span>}\r\n                                    type=\"email\"\r\n                                    value={email}\r\n                                    onChange={handleChangeEmail}\r\n                                    className=\"input\"\r\n\r\n                                    ref = {register({\r\n                                        required: \"Password is required\",\r\n                                        minLength:{\r\n                                            value: 8,\r\n                                            message: \"Min length 8 character.\"\r\n                                        },\r\n                                        maxLength:{\r\n                                            value: 15,\r\n                                            message: \"Max length 15 character.\"\r\n                                        },\r\n                                        validate: (value) => {\r\n                                            return (\r\n                                                [/[a-z]/,/[A-Z]/,/[0-9]/,/[^a-zA-Z0-9]/].every(pattern => pattern.test(value)) ||\r\n                                                \"The password must contain uppercase, lowercase, number and a special character.\"\r\n                                            )\r\n                                        }\r\n                                    })}\r\n                                    name={\"password\"}\r\n                                />\r\n                                {errors.password ? <p>{errors.password.message}</p> : null}\r\n                                <TextField\r\n                                    id=\"standard-password-input\"\r\n                                    label={<span><LockIcon/> Password</span>}\r\n                                    type=\"password\"\r\n                                    autoComplete=\"current-password\"\r\n                                    value={password}\r\n                                    onChange={handleChangePassword}\r\n                                    className=\"input\"\r\n                                    error={passwordValid}\r\n                                    helperText={passwordErrorMassage}\r\n                                />\r\n                                <TextField\r\n                                    id=\"standard-password-input\"\r\n                                    label={<span><LockIcon/> Confirm Password</span>}\r\n                                    type=\"password\"\r\n                                    autoComplete=\"current-password\"\r\n                                    value={confirmPassword}\r\n                                    onChange={handleChangeConfirmPassword}\r\n                                    className=\"input\"\r\n                                />\r\n                                <input className={\"input\"} type=\"submit\" value=\"Sign Up\"/>\r\n                                {/*<label className={\"d-flex agreeToRules\"}>*/}\r\n                                    {/*<input type=\"checkbox\" checked={checkedAgree} onChange={()=>setCheckedAgree(!checkedAgree)}/>*/}\r\n                                    {/*I accept the*/}\r\n                                {/*</label>*/}\r\n\r\n                            </form>\r\n                        </div>\r\n                        <div>\r\n                            <p>Already have an account?\r\n                                <Link to=\"/SignIn\"> Sign In</Link>\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\n",["49","50"],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":11,"column":21,"nodeType":"57","endLine":11,"endColumn":37},{"ruleId":"55","severity":1,"message":"56","line":14,"column":21,"nodeType":"57","endLine":14,"endColumn":37},{"ruleId":"58","severity":1,"message":"59","line":22,"column":12,"nodeType":"60","messageId":"61","endLine":22,"endColumn":26},{"ruleId":"58","severity":1,"message":"62","line":23,"column":12,"nodeType":"60","messageId":"61","endLine":23,"endColumn":17},{"ruleId":"58","severity":1,"message":"63","line":12,"column":8,"nodeType":"60","messageId":"61","endLine":12,"endColumn":13},{"ruleId":"58","severity":1,"message":"64","line":13,"column":18,"nodeType":"60","messageId":"61","endLine":13,"endColumn":24},{"ruleId":"58","severity":1,"message":"65","line":29,"column":37,"nodeType":"60","messageId":"61","endLine":29,"endColumn":42},{"ruleId":"66","severity":1,"message":"67","line":116,"column":50,"nodeType":"68","messageId":"69","endLine":116,"endColumn":498},{"ruleId":"58","severity":1,"message":"70","line":9,"column":8,"nodeType":"60","messageId":"61","endLine":9,"endColumn":14},{"ruleId":"58","severity":1,"message":"71","line":16,"column":12,"nodeType":"60","messageId":"61","endLine":16,"endColumn":22},{"ruleId":"58","severity":1,"message":"72","line":16,"column":24,"nodeType":"60","messageId":"61","endLine":16,"endColumn":37},{"ruleId":"58","severity":1,"message":"73","line":18,"column":27,"nodeType":"60","messageId":"61","endLine":18,"endColumn":43},{"ruleId":"58","severity":1,"message":"74","line":19,"column":34,"nodeType":"60","messageId":"61","endLine":19,"endColumn":57},{"ruleId":"58","severity":1,"message":"75","line":21,"column":12,"nodeType":"60","messageId":"61","endLine":21,"endColumn":24},{"ruleId":"58","severity":1,"message":"76","line":21,"column":26,"nodeType":"60","messageId":"61","endLine":21,"endColumn":41},{"ruleId":"58","severity":1,"message":"65","line":32,"column":37,"nodeType":"60","messageId":"61","endLine":32,"endColumn":42},{"ruleId":"51","replacedBy":"77"},{"ruleId":"53","replacedBy":"78"},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"react/jsx-pascal-case","Imported JSX component Sign_Up_Valid must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","no-unused-vars","'successMessage' is assigned a value but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'axios' is defined but never used.","'sha224' is defined but never used.","'watch' is assigned a value but never used.","no-control-regex","Unexpected control character(s) in regular expression: \\x01, \\x08, \\x0b, \\x0c, \\x0e, \\x1f, \\x01, \\x09, \\x0b, \\x0c, \\x0e, \\x01, \\x08, \\x0b, \\x0c, \\x0e, \\x1f, \\x01, \\x09, \\x0b, \\x0c, \\x0e.","Literal","unexpected","'Button' is defined but never used.","'emailValid' is assigned a value but never used.","'setEmailValid' is assigned a value but never used.","'setPasswordValid' is assigned a value but never used.","'setPasswordErrorMassage' is assigned a value but never used.","'checkedAgree' is assigned a value but never used.","'setCheckedAgree' is assigned a value but never used.",["79"],["80"],"no-global-assign","no-unsafe-negation"]