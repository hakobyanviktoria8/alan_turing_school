[{"C:\\Users\\Viktorya\\Desktop\\alan_turing_school\\src\\index.js":"1","C:\\Users\\Viktorya\\Desktop\\alan_turing_school\\src\\App.js":"2","C:\\Users\\Viktorya\\Desktop\\alan_turing_school\\src\\constants\\apiConstants.js":"3","C:\\Users\\Viktorya\\Desktop\\alan_turing_school\\src\\SignUpSuccess\\SignUpSuccess.js":"4","C:\\Users\\Viktorya\\Desktop\\alan_turing_school\\src\\SignUp\\SignUp.js":"5","C:\\Users\\Viktorya\\Desktop\\alan_turing_school\\src\\SignUp\\ModalComponent.js":"6","C:\\Users\\Viktorya\\Desktop\\alan_turing_school\\src\\SignIn\\SignIn.js":"7","C:\\Users\\Viktorya\\Desktop\\alan_turing_school\\src\\SignInSuccess\\SignInSuccess.js":"8"},{"size":225,"mtime":1613083587876,"results":"9","hashOfConfig":"10"},{"size":968,"mtime":1615825920728,"results":"11","hashOfConfig":"10"},{"size":61,"mtime":1613900019183,"results":"12","hashOfConfig":"10"},{"size":2566,"mtime":1614468431655,"results":"13","hashOfConfig":"10"},{"size":8830,"mtime":1615909344550,"results":"14","hashOfConfig":"10"},{"size":1418,"mtime":1613333292658,"results":"15","hashOfConfig":"10"},{"size":5051,"mtime":1615827555152,"results":"16","hashOfConfig":"10"},{"size":2603,"mtime":1615826031365,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"d203xp",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Users\\Viktorya\\Desktop\\alan_turing_school\\src\\index.js",[],["37","38"],"C:\\Users\\Viktorya\\Desktop\\alan_turing_school\\src\\App.js",[],"C:\\Users\\Viktorya\\Desktop\\alan_turing_school\\src\\constants\\apiConstants.js",[],"C:\\Users\\Viktorya\\Desktop\\alan_turing_school\\src\\SignUpSuccess\\SignUpSuccess.js",[],"C:\\Users\\Viktorya\\Desktop\\alan_turing_school\\src\\SignUp\\SignUp.js",[],"C:\\Users\\Viktorya\\Desktop\\alan_turing_school\\src\\SignUp\\ModalComponent.js",[],["39","40"],"C:\\Users\\Viktorya\\Desktop\\alan_turing_school\\src\\SignIn\\SignIn.js",["41"],"import React from \"react\";\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport \"./../SignUp/SignUp.css\";\r\nimport logo from \"./../img/logo.png\";\r\nimport axios from \"axios/index\";\r\nimport {sha256} from \"js-sha256\";\r\nimport {useForm} from \"react-hook-form/dist/index\";\r\nimport  { Link, useHistory } from \"react-router-dom\";\r\nimport {API_BASE_URL} from '../constants/apiConstants';\r\n\r\nexport function SignIn(props) {\r\n    const { register, handleSubmit, errors, setError } = useForm({mode: 'onChange'});\r\n    let history = useHistory();\r\n\r\n    const onSubmit = data => {\r\n        const payload= {\r\n            \"mail\": data.email,\r\n            \"password\": sha256.create().update(data.password).hex(),\r\n        };\r\n\r\n        axios.post(API_BASE_URL + '/User/LogIn', payload)\r\n            .then(function (response) {\r\n                if(response.status === 200){\r\n                    history.push(\"/SignInSuccess\");\r\n                } else {\r\n                    console.log(errors)\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                if (error.response.status === 401) {\r\n                    setError(\"password\", {message: \"Incorrect email or password\"});\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n    return (\r\n        <div className = {\"SignUpSuccess\"}>\r\n            <Container fluid className = {\"SignUP\"}>\r\n                <Row>\r\n                    <Col lg = {\"7\"} className = {\"p-0\"}>\r\n                        <div className = {\"bgSignUp\"}>\r\n                            <div className = {\"logoWrap\"}>\r\n                                <img src = {logo} alt = \"\"/>\r\n                            </div>\r\n                            <div className = {\"headerLeftText\"}>\r\n                                <h1>Welcome Back</h1>\r\n                                <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit.\r\n                                    Consequuntur ex officia officiis possimus.\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                    <Col lg = {\"5\"}>\r\n                        <div className = {\"headerRightText\"}>\r\n                            <div>\r\n                                <h2>Sign In</h2>\r\n                            </div>\r\n                            <div>\r\n                                <form onSubmit={handleSubmit(onSubmit)} noValidate autoComplete=\"off\" method={\"post\"}>\r\n                                    <Row>\r\n                                        <Col lg={12}>\r\n                                            <input\r\n                                                ref = {register({\r\n                                                    required: \"Email is required\"})\r\n                                                }\r\n                                                name={\"email\"}\r\n                                                className={\"input\"}\r\n                                                type=\"email\"\r\n                                                placeholder={\"Email\"}\r\n                                            />\r\n                                        </Col>\r\n                                    </Row>\r\n                                    {errors.email ? <span>{errors.email.message}</span> : null}\r\n                                    <br/>\r\n                                    <Row>\r\n                                        <Col lg={12}>\r\n                                            <input\r\n                                                ref = {register({\r\n                                                    required: \"Password is required\"\r\n                                                })}\r\n                                                name={\"password\"}\r\n                                                className={\"input\"}\r\n                                                type=\"password\"\r\n                                                placeholder={\"Password\"}\r\n                                             />\r\n                                        </Col>\r\n                                    </Row>\r\n                                    {errors.password ? <span>{errors.password.message}</span> : null}\r\n                                    <br/>\r\n                                    <a href = \"\">Forgot Password?</a>\r\n                                    <br/>\r\n                                    <br/>\r\n                                    <label className = {\"signInBtn\"}>\r\n                                        <input className = {\"input\"} type = \"submit\" value = \"Sign In\" />\r\n                                    </label>\r\n                                </form>\r\n                            </div>\r\n                            <div  className={\"text-center\"}>\r\n                                <p>New user <Link to = \"/SignUp\">Sign Up</Link></p>\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}","C:\\Users\\Viktorya\\Desktop\\alan_turing_school\\src\\SignInSuccess\\SignInSuccess.js",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"42","replacedBy":"46"},{"ruleId":"44","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":91,"column":37,"nodeType":"50","endLine":91,"endColumn":50},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],["51"],["52"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]